{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/lenovo/Desktop/E-mistri/image_detection/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/lenovo/Desktop/E-mistri/image_detection/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/lenovo/Desktop/E-mistri/image_detection/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as mobilenet from'@tensorflow-models/mobilenet';import{useState,useEffect,useRef}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isModelLoading=_useState2[0],setIsModelLoading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),model=_useState4[0],setModel=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),imageUrl=_useState6[0],setImageUrl=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),results=_useState8[0],setResults=_useState8[1];var imageRef=useRef();var textInputRef=useRef();var loadModel=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _model;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsModelLoading(true);_context.prev=1;_context.next=4;return mobilenet.load();case 4:_model=_context.sent;setModel(_model);setIsModelLoading(false);_context.next=13;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);console.log(_context.t0);setIsModelLoading(false);case 13:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function loadModel(){return _ref.apply(this,arguments);};}();var uploadImage=function uploadImage(e){var files=e.target.files;if(files.length>0){var url=URL.createObjectURL(files[0]);setImageUrl(url);}else{setImageUrl(null);}};var identify=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var results;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return model.classify(imageRef.current);case 2:results=_context2.sent;setResults(results);console.log(results);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function identify(){return _ref2.apply(this,arguments);};}();var handleOnChange=function handleOnChange(e){setImageUrl(e.target.value);setResults([]);};useEffect(function(){loadModel();},[]);if(isModelLoading){return/*#__PURE__*/_jsx(\"h2\",{children:\"model Loading...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"header\",children:\"Image Identifiaction\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"image/*\",capture:\"camera\",className:\"uploadInput\",onChange:uploadImage}),/*#__PURE__*/_jsx(\"span\",{className:\"or\",children:\"OR   \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter Image Url\",ref:textInputRef,onChange:handleOnChange}),/*#__PURE__*/_jsxs(\"div\",{className:\"mainWrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mainContent\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"imageHolder\",children:imageUrl&&/*#__PURE__*/_jsx(\"img\",{src:imageUrl,alt:\"upload Preview\",crossOrigin:\"anonymous\",ref:imageRef})}),results.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"resultsHolder\",children:results.map(function(result,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"result\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"name\",children:result.className}),/*#__PURE__*/_jsxs(\"span\",{className:\"confidence\",children:[\"Confidence level: \",(result.probability*100).toFixed(2),\"% \",index===0&&/*#__PURE__*/_jsx(\"span\",{className:\"bestGuess\",children:\"Best Guess\"})]})]},result.className);})})]}),imageUrl&&/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:identify,children:\"Identify Image\"})]})]})]});}export default App;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/E-mistri/image_detection/src/App.js"],"names":["mobilenet","useState","useEffect","useRef","App","isModelLoading","setIsModelLoading","model","setModel","imageUrl","setImageUrl","results","setResults","imageRef","textInputRef","loadModel","load","console","log","uploadImage","e","files","target","length","url","URL","createObjectURL","identify","classify","current","handleOnChange","value","map","result","index","className","probability","toFixed"],"mappings":"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","sourcesContent":["import * as mobilenet from '@tensorflow-models/mobilenet';\nimport { useState,  useEffect,useRef } from 'react';\n\nfunction App() {\n  const [isModelLoading, setIsModelLoading] = useState(false)\n  const [model, setModel] = useState(null)\n  const [imageUrl,setImageUrl] = useState(null)\n  const [results, setResults] = useState([])\n  const imageRef = useRef()\n  const textInputRef = useRef()\n  \n  const loadModel = async() =>{\n    setIsModelLoading(true)\n    try{\n      const model = await mobilenet.load()\n      setModel(model)\n      setIsModelLoading(false)\n    }\n    catch(error){\n      console.log(error)\n      setIsModelLoading(false)\n\n    }\n  }\n  const uploadImage= (e) =>{\n    const {files} = e.target\n    if(files.length>0){\n      const url = URL.createObjectURL(files[0])\n      setImageUrl(url)\n    }\n    else{\n      setImageUrl(null)\n    }\n  }\n  const identify= async ()=>{\n    const results =await model.classify(imageRef.current)\n     setResults(results)\n    console.log(results)\n  }\n  const handleOnChange = (e) =>{\n    setImageUrl(e.target.value)\n    setResults([])\n  }\n  useEffect(()=>{\n    loadModel()\n  },[])\n  if(isModelLoading){\n    return <h2>model Loading...</h2>\n  }\n  return (\n    <div className=\"App\">\n      <h1 className=\"header\">Image Identifiaction</h1>\n      <div>\n        <input type= \"file\" accept= 'image/*' capture= 'camera' className='uploadInput'\n        onChange={uploadImage}/>\n        <span className=\"or\">OR   </span>\n        <input type=\"text\" placeholder=\"Enter Image Url\" ref={textInputRef} onChange={handleOnChange}/>\n       <div className='mainWrapper'>\n          <div className = \"mainContent\">\n            \n            <div className = \"imageHolder\">\n             {imageUrl && <img src={imageUrl} alt=\"upload Preview\" crossOrigin=\"anonymous\" ref = {imageRef}/>}\n            \n            </div>\n            {results.length > 0 && <div className='resultsHolder'>\n                        {results.map((result, index) => {\n                            return (\n                                <div className='result' key={result.className}>\n                                    <span className='name'>{result.className}</span>\n                                    <span className='confidence'>Confidence level: {(result.probability * 100).toFixed(2)}% {index === 0 && <span className='bestGuess'>Best Guess</span>}</span>\n                                </div>\n                            )\n                        })}\n            </div>}\n          \n          </div>\n          \n          {imageUrl && <button className = 'button' onClick={identify}>Identify Image</button>}\n       </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}